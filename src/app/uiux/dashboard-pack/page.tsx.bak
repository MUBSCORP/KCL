'use client';

// @ts-ignore
import Grid from '@mui/material/Grid';
import DashboardCard from '@/components/DashboardCard';
import ECharts from '@/components/charts/ECharts';
import { voltageCurrentOption } from '@/charts/options/voltageCurrent';
import { socGaugeOption } from '@/charts/options/socGauge';
import { useEffect, useMemo, useState } from 'react';
import { openTelemetrySSE } from '@/services/telemetry.service';
import { Box, Chip, Stack, Typography } from '@mui/material';

type Summary = {
  eqpId: string;
  channelIndex: number;
  status?: string;
  voltage?: number;
  current?: number;
  soc?: number;
  cellTemperature?: number;
  timestamp?: string;
};

export default function DashboardPage() {
  const [pts, setPts] = useState<Summary[]>([]);
  const [soc, setSoc] = useState(0);
  const maxLen = 30;

  useEffect(() => {
    const es = openTelemetrySSE((data: Summary) => {
      setPts((prev) => {
        const next = [...prev, data];
        if (next.length > maxLen) next.shift();
        return next;
      });
      if (typeof data.soc === 'number') setSoc(data.soc);
    });
    return () => es.close();
  }, []);

  const labels = useMemo(() => pts.map((p) => (p.timestamp ? new Date(p.timestamp).toLocaleTimeString() : '')), [pts]);
  const volts = useMemo(() => pts.map((p) => p.voltage ?? null), [pts]);
  const currents = useMemo(() => pts.map((p) => p.current ?? null), [pts]);

  return (
    <Grid container spacing={2}>
      <Grid xs={12} md={8}>
        <DashboardCard title="Voltage / Current">
          <ECharts option={voltageCurrentOption(labels, volts as number[], currents as number[])} />
        </DashboardCard>
      </Grid>
      <Grid xs={12} md={4}>
        <DashboardCard title="SOC">
          <ECharts option={socGaugeOption(soc)} />
          <Stack direction="row" spacing={1} mt={2}>
            <Chip label={`Points: ${pts.length}`} />
            {pts.at(-1)?.status && <Chip color="primary" label={`Status: ${pts.at(-1)!.status}`} />}
          </Stack>
        </DashboardCard>
      </Grid>
      <Grid xs={12}>
        <DashboardCard title="최근 수신">
          <Box sx={{ fontFamily: 'ui-monospace, Menlo, monospace', fontSize: 13, whiteSpace: 'pre' }}>
            {pts.slice(-6).map((p, i) => (
              <div key={i}>
                {p.timestamp} | {p.eqpId}:{p.channelIndex} | V={p.voltage} A={p.current} SOC={p.soc} T={p.cellTemperature}
              </div>
            ))}
          </Box>
        </DashboardCard>
      </Grid>
    </Grid>
  );
}
